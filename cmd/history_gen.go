// Code generated by gen/main.go; DO NOT EDIT.

package cmd

import (
	"context"
	"fmt"

	"cloud.google.com/go/bigquery/datatransfer/apiv1/datatransferpb"
	"github.com/auifzysr/yabqsqcli/pkg/config"
	"github.com/auifzysr/yabqsqcli/pkg/domain"
	"github.com/auifzysr/yabqsqcli/pkg/factory"
	"github.com/urfave/cli/v2"
)

func history(cfg *config.HistoryConfig) error {
	if cfg.TransferConfigID == "" {
		configID, err := domain.ResolveTransferConfigID(cfg)
		if err != nil {
			return err
		}
		cfg.TransferConfigID = configID
	}
	tc, err := factory.HistoryTransferConfigFactory(cfg)
	if err != nil {
		return err
	}
	ctx := context.Background()

	var res []*datatransferpb.TransferRun
	itr := client.ListTransferRuns(ctx, tc)
	for {
		m, err := itr.Next()
		if err != nil {
			break
		}
		res = append(res, m)
	}
	f, err := domain.SelectFormatter(cfg.OutputFormat)
	if err != nil {
		return err
	}
	o, err := f.Format(res)
	if err != nil {
		return err
	}
	fmt.Printf("%s", o)

	return nil
}

func historyCommand(rootCfg *config.RootConfig) *cli.Command {
	cfg := &config.HistoryConfig{
		RootConfig: rootCfg,
	}

	return &cli.Command{
		Name:        "history",
		Description: "history scheduled query config",
		Action: func(cCtx *cli.Context) error {
			return history(cfg)
		},
		Flags: []cli.Flag{
			&cli.StringFlag{
				Name:        "config-id",
				Aliases:     []string{"c"},
				Value:       "",
				Usage:       "transfer config ID",
				Destination: &cfg.TransferConfigID,
			},
			&cli.StringFlag{
				Name:        "name",
				Aliases:     []string{"n"},
				Value:       "",
				Usage:       "name",
				Destination: &cfg.DisplayName,
			},
		},
	}
}
