package main

var flagTemplates = map[string]string{
	"name": `&cli.StringFlag{
				Name:        "name",
				Aliases:     []string{"n"},
				Value:       "",
				Usage:       "name",
				Destination: &cfg.DisplayName,
			},`,
	"config-id": `&cli.StringFlag{
				Name:        "config-id",
				Aliases:     []string{"c"},
				Value:       "",
				Usage:       "transfer config ID",
				Destination: &cfg.TransferConfigID,
			},`,
	"since": `&cli.StringFlag{
				Name:        "since",
				Aliases:     []string{"s"},
				Value:       "",
				Usage:       "since what past time running scheduled query, must be with --until in RFC3339",
				Destination: &cfg.Since,
			},`,
	"until": `&cli.StringFlag{
				Name:        "until",
				Aliases:     []string{"u"},
				Value:       "",
				Usage:       "until what past time running scheduled query, must be with --since in RFC3339",
				Destination: &cfg.Until,
			},`,
	"at": `&cli.StringFlag{
				Name:        "at",
				Aliases:     []string{"a"},
				Value:       "",
				Usage:       "at what time running scheduled query, in RFC3339",
				Destination: &cfg.At,
			},`,
	"query": `&cli.StringFlag{
				Name:        "query",
				Aliases:     []string{"q"},
				Value:       "",
				Usage:       "query text",
				Destination: &cfg.Query,
			},`,
	"dataset": `&cli.StringFlag{
				Name:        "dataset",
				Aliases:     []string{"d"},
				Value:       "",
				Usage:       "destination dataset",
				Destination: &cfg.DestinationDatasetID,
			},`,
	"table": `&cli.StringFlag{
				Name:        "table",
				Aliases:     []string{"t"},
				Value:       "",
				Usage:       "destination table",
				Destination: &cfg.DestinationTableID,
			},`,
	"partitioning-field": `&cli.StringFlag{
				Name:        "partitioning-field",
				Aliases:     []string{"pf"},
				Value:       "",
				Usage:       "destination table partitioning field",
				Destination: &cfg.DestinationTablePartitioningField,
			},`,
	"partitioning-type": `&cli.StringFlag{
				Name:        "partitioning-type",
				Aliases:     []string{"pt"},
				Value:       "",
				Usage:       "destination table partitioning type",
				Destination: &cfg.DestinationTablePartitioningField,
			},`,
	"write-disposition": `&cli.StringFlag{
				Name:        "write-disposition",
				Aliases:     []string{"wd"},
				Value:       "",
				Usage:       "write disposition (WRITE_APPEND/ WRITE_TRUNCATE)",
				Destination: &cfg.WriteDisposition,
			},`,
	"schedule": `&cli.StringFlag{
				Name:        "schedule",
				Aliases:     []string{"s"},
				Value:       "",
				Usage:       "schedule",
				Destination: &cfg.Schedule,
			},`,
	"disabled": `&cli.BoolFlag{
				Name:        "disabled",
				Aliases:     []string{"x"},
				Usage:       "disabled",
				Destination: &cfg.Disabled,
			},`,
	"pubsub-topic": `&cli.StringFlag{
				Name:        "pubsub-topic",
				Aliases:     []string{"pst"},
				Value:       "",
				Usage:       "notification destination pubsub topic",
				Destination: &cfg.NotificationPubSubTopic,
			},`,
	"enable-email": `&cli.BoolFlag{
				Name:        "enable-email",
				Aliases:     []string{"ee"},
				Usage:       "notification send email on failure",
				Destination: &cfg.NotificationSendEmail,
			},`,
	"service-account": `&cli.StringFlag{
				Name:        "service-account",
				Aliases:     []string{"sa"},
				Value:       "",
				Usage:       "runner's service account email",
				Destination: &cfg.ServiceAccountEmail,
			},`,
	"start-time": `&cli.StringFlag{
				Name:        "start-time",
				Aliases:     []string{"st"},
				Value:       "",
				Usage:       "start time",
				Destination: &cfg.StartTime,
			},`,
	"end-time": `&cli.StringFlag{
				Name:        "end-time",
				Aliases:     []string{"et"},
				Value:       "",
				Usage:       "end time",
				Destination: &cfg.EndTime,
			},`,
	"encryption-key-ring": `&cli.StringFlag{
				Name:        "encryption-key-ring",
				Aliases:     []string{"kr"},
				Value:       "",
				Usage:       "encryption key ring",
				Destination: &cfg.EncryptionKeyRing,
			},`,
	"encryption-key": `&cli.StringFlag{
				Name:        "encryption-key",
				Aliases:     []string{"k"},
				Value:       "",
				Usage:       "encryption key",
				Destination: &cfg.EncryptionKey,
			},`,
}
